@using ArgicultureInventorySystem.Models
@model ArgicultureInventorySystem.ViewModel.UcBookingStockViewModel
@{
    ViewBag.Title = "Edit";
}
@{
    if (User.IsInRole(RoleName.CanManageBookings) && Session["UserSessionId"] != null)
    {
        <ul class="breadcrumb">
            <li><a href="../AdminHomePage">Home</a></li>
            <li class="active">Homepage</li>
        </ul>
    }
}


<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h4>Booking</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div>
        <dl class="dl-horizontal">
            <dt>@Html.LabelFor(model => model.ApplicationUser.Name, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })</dt>
            <dd>@Html.DisplayFor(model => model.ApplicationUser.Name, new { @class = "form-control" })</dd>
            @Html.ValidationMessageFor(model => model.ApplicationUser.Name, "", new { @class = "text-danger" })

            <dt>@Html.LabelFor(model => model.BookingDate.BookingDateTime, "Booking Date", htmlAttributes: new { @class = "control-label col-md-2" })</dt>
            <dd>@Html.TextBoxFor(model => model.BookingDate.BookingDateTime, "{0:dd-MM-yyyy}", new { @class = "form-control", id = "datepicker" })</dd>
            @Html.ValidationMessageFor(model => model.BookingDate.BookingDateTime, "", new { @class = "text-danger" })

            <dt>@Html.LabelFor(model => model.BookingDate.ReturnDateTime, "Return Date", htmlAttributes: new { @class = "control-label col-md-2" })</dt>
            <dd>@Html.TextBoxFor(model => model.BookingDate.ReturnDateTime, "{0:dd-MM-yyyy}", new { @class = "form-control", id = "datepicker2" })</dd>
            @Html.ValidationMessageFor(model => model.BookingDate.ReturnDateTime, "", new { @class = "text-danger" })
        </dl>

        <div id="bookings">
            @if (Model.Bookings != null)
            {
                foreach (var booking in Model.Bookings)
                {
                    <!--Partial View here-->
                    @Html.Partial("_BookingPartial", booking)
                }
            }
        </div>


        @Html.HiddenFor(model => model.BookingDate.Id)
        @Html.HiddenFor(model => model.BookingId)
        @Html.HiddenFor(model => model.ApplicationUser.Id)
        <br />
        <button type="button" id="add" class="btn btn-primary">Click to add Booth + </button>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit Booking" class="btn btn-success btn-lg" />
            </div>
        </div>
    </div>
}

<div align="left">
    <ul class="pager" align="left">
        <li><a href="javascript:void(0);" id="backLink"> << Back</a></li>
    </ul>
</div>


@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $(document).on('click', '#backLink', function () {
                history.go(-1);
            });

            $('#datepicker').datepicker({
                dateFormat: 'dd-mm-yy',
                minDate: new Date()
            });

            var bookdate = new Date();
            $('#datepicker').on("change paste keyup",
                function () {
                    bookdate = $('#datepicker').val();
                });

            $('#datepicker2').datepicker({
                dateFormat: 'dd-mm-yy',
                minDate: bookdate
            });

            $('#datepicker2').on("change paste keyup",
                function () {

                    var returndate = $('#datepicker2').val();
                    if (returndate < bookdate) {
                        bootbox.alert("The return date must be after the booking date.");
                        $('#datepicker2').val('');
                    }
                });

            var url = '@Url.Action("BookingPartialResult")';
            var form = $('form');
            var recipients = $('#bookings');
            $('#add').click(function() {
                $.get(url,
                    function(response) {
                        recipients.append(response);
                        // Reparse the validator for client side validation
                        form.data('validator', null);
                        $.validator.unobtrusive.parse(form);
                    });
            });

            $('#bookings').on('click', '.deleteRow', function () {

                var container = $(this).closest('.bookings');
                var id = container.find('.id').val();
                var stockId = container.find('.stockId').val();
                var ucId = container.find('.ucId').val();

                if (id) {
                    bootbox.confirm("Delete Booked item?", function(result) {
                        if (result) {
                            $.ajax(
                                {
                                    type: "DELETE",
                                    url: "@Url.Action("Delete" , "Booking")",
                                    ajaxsync: true,
                                    data: { id: id, stockId: stockId, ucId: ucId },
                                    success: function() {
                                            bootbox.alert("Item booked deleted successfully",
                                                function() {
                                                    container.fadeOut(500,
                                                        function() {
                                                            container.remove();
                                                        });
                                                });
                                    },
                                    error: function(data) {
                                        bootbox.alert("At least select one stock to continue booking.");
                                    }
                                });
                        }
                    });
                }
            });
        });
    </script>

    @if (ViewBag.OverloadBooking != null)
    {
        <script type="text/javascript">
            $(function() {
                bootbox.alert("@ViewBag.OverloadBooking");
            });

        </script>
    }

    @if (ViewBag.ZeroBooking != null)
    {
        <script type="text/javascript">
            $(function() {
                bootbox.alert("@ViewBag.ZeroBooking");
            });

        </script>
    }

    @if (ViewBag.Error != null)
    {
        <script type="text/javascript">
            $(function() {
                bootbox.alert("@ViewBag.Error");
            });

        </script>
    }
}